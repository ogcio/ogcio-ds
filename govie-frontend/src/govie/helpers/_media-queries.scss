////
/// @group helpers/layout
////

// =========================================================
// Wrangle sass-mq config...
// =========================================================

// Pass our breakpoints and static breakpoint definitions through to sass-mq.
$mq-breakpoints: if(variable-exists(govie-breakpoints), $govie-breakpoints, ());
$mq-static-breakpoint: if(variable-exists(govie-ie8-breakpoint), $govie-ie8-breakpoint, desktop);

$mq-show-breakpoints: ();

@if variable-exists(govie-show-breakpoints) and $govie-show-breakpoints {
  $mq-show-breakpoints: map-keys($govie-breakpoints);
}

// When building a stylesheet for IE8, set $mq-responsive to false in order to
// 'rasterize' any media queries.

$mq-responsive: true;
@if variable-exists(govie-is-ie8) and $govie-is-ie8 {
  $mq-responsive: false;
}

// This is a horrible, horrible hack to prevent the 'dev mode' CSS to display
// the current breakpoint from being included multiple times.
//
// We can't use the `exports` mixin for this because import directives cannot be
// used within control directives ðŸ˜ 
$sass-mq-already-included: false !default;

@if $sass-mq-already-included {
  $mq-show-breakpoints: ();
}

@import "../vendor/sass-mq";

$sass-mq-already-included: true;

// =========================================================
// Helpers
// =========================================================

/// Media Query
///
/// This is a currently a wrapper for sass-mq - abstracted so that we can
/// replace it in the future if we so choose.
///
/// @param {String | Boolean} $from [false] - One of $govie-breakpoints
/// @param {String | Boolean} $until [false] - One of $govie-breakpoints
/// @param {String | Boolean} $and [false] - Additional media query parameters
/// @param {String} $media-type [all] - Media type: screen, printâ€¦
///
/// @ignore Undocumented mq API, for advanced use only:
/// @ignore @param {Map} $breakpoints [$govie-breakpoints]
/// @ignore @param {String} $static-breakpoint [$govie-ie8-breakpoint]
/// @ignore @param {Boolean} $responsive [$govie-is-ie8]
///
/// @content styling rules, wrapped into a @media query when $responsive is true
///
/// @example scss
///  .element {
///    @include govie-media-query($from: mobile) {
///      color: red;
///    }
///    @include govie-media-query($until: tablet) {
///      color: blue;
///    }
///    @include govie-media-query(mobile, tablet) {
///      color: green;
///    }
///    @include govie-media-query($from: tablet, $and: '(orientation: landscape)') {
///      color: teal;
///    }
///    @include govie-media-query(950px) {
///      color: hotpink;
///    }
///    @include govie-media-query(tablet, $media-type: screen) {
///      color: hotpink;
///    }
///  }
///
/// @access public

@mixin govie-media-query($args...) {
  @include mq($args...) {
    @content;
  }
}
